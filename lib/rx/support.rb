# Generated by machine_builder.rb; Don't edit!
module RX

  class Reader
    FALLBACKS = {
      1 => 4, 2 => 3, 3 => 4, 4 => 3, 5 => 5, 6 => 6, 
      7 => 5, 8 => 86, 9 => 86, 10 => 5, 11 => 86, 12 => 1, 
      13 => 86, 14 => 86, 15 => 86, 16 => 86, 17 => 86, 18 => 86, 
      19 => 86, 20 => 86, 21 => 21, 22 => 21, 23 => 21, 24 => 21, 
      25 => 21, 26 => 21, 27 => 29, 28 => 29, 29 => 86, 30 => 86, 
      31 => 86, 32 => 32, 33 => 32, 34 => 34, 35 => 37, 36 => 37, 
      37 => 3, 38 => 3, 39 => 3, 40 => 3, 41 => 32, 42 => 32, 
      43 => 45, 44 => 45, 45 => 3, 46 => 86, 47 => 86, 48 => 32, 
      49 => 86, 50 => 86, 51 => 86, 52 => 86, 53 => 86, 54 => 86, 
      55 => 86, 56 => 86, 57 => 86, 58 => 86, 59 => 86, 60 => 60, 
      61 => 60, 62 => 60, 63 => 63, 64 => 86, 65 => 86, 66 => 70, 
      67 => 70, 68 => 70, 69 => 70, 70 => 60, 71 => 70, 72 => 70, 
      73 => 70, 74 => 70, 75 => 70, 76 => 70, 77 => 70, 78 => 70, 
      79 => 70, 80 => 70, 81 => 70, 82 => 70, 83 => 70, 84 => 70, 
      85 => 70, 86 => 60, 87 => 60, 88 => 60, 89 => 60, 90 => 60, 
      91 => 60, 92 => 60, 93 => 60, 94 => 60, 95 => 60, 96 => 60, 
      97 => 60, 98 => 60, 99 => 60, 100 => 60, 101 => 60, 102 => 60, 
      103 => 60, 104 => 60, 105 => 60, 106 => 60, 107 => 60, 108 => 60, 
      109 => 60, 110 => 60, 
    }

    ERROR_MESSAGES = {
      1 => "in prolog", 5 => "after DTD", 6 => "after <", 
      9 => "after <!", 13 => "in PI", 19 => "after <!-", 
      21 => "in comment", 27 => "in <![CDATA[", 
      32 => "after <!DOCTYPE", 34 => "after DOCTYPE Name", 
      35 => "in PUBLIC", 36 => "after PUBLIC", 
      38 => "in PUBLIC ID", 40 => "after PUBLIC ID", 
      42 => "after SYSTEM ID", 43 => "in SYSTEM", 
      44 => "after SYSTEM", 48 => "after SYSTEM ID", 
      49 => "after </", 50 => "in end-tag", 52 => "in element type", 
      53 => "after / in start-tag", 54 => "in start-tag", 
      57 => "after AttrName= in start-tag", 
      60 => "in character data", 63 => "after end of document", 
      64 => "< after document", 66 => "after &", 
      67 => "in &# reference", 68 => "in &# decimal-number reference", 
      69 => "in &#x reference", 71 => "in entity reference", 
      85 => "in entity reference", 87 => "trying for <?xml", 
      91 => "in XML declaration", 
    }

    STATE_INDOC = 60

    STATE_NAMES = {
        1 => :Start, 2 => :LTatStart, 3 => :BustedProlog, 
        4 => :InProlog, 5 => :AfterDTD, 6 => :LTinProlog, 
        7 => :LTafterDTD, 8 => :SawLT, 9 => :MDOinProlog, 
        10 => :MDOafterDTD, 11 => :MDO, 12 => :Keyword, 
        13 => :InPI, 14 => :PI2, 15 => :PI3, 16 => :PI4, 17 => :PICMustHaveGT, 
        18 => :PICwantsGT, 19 => :COMStartHalf, 
        20 => :PComStart, 21 => :InComment, 22 => :InPComment, 
        23 => :DashInComment, 24 => :DashInPComment, 
        25 => :DDInComment, 26 => :DDInPComment, 
        27 => :StartCData1, 28 => :AfterCdataKW, 
        29 => :InCData, 30 => :EndCData1, 31 => :EndCData2, 
        32 => :InDoctype, 33 => :GIGrabber, 34 => :SawDTName, 
        35 => :Public1, 36 => :AfterPublicKW, 37 => :SawPublic, 
        38 => :SQPublic, 39 => :DQPublic, 40 => :AfterPublic, 
        41 => :SawPubID, 42 => :SawSystemID, 43 => :System1, 
        44 => :AfterSystemKW, 45 => :SawSystem, 
        46 => :SQCData, 47 => :DQCData, 48 => :SawDTypeExternalID, 
        49 => :ETAGO, 50 => :EtagGI, 51 => :SawEtagGI, 52 => :StagGI, 
        53 => :EmptyClose, 54 => :InStag, 55 => :AttrName, 
        56 => :Eq1, 57 => :Eq2, 58 => :SQAVal, 59 => :DQAVal, 60 => :InDoc, 
        61 => :RSBInDoc, 62 => :RSB2InDoc, 63 => :AfterRoot, 
        64 => :LTAfterRoot, 65 => :ComStartAfter, 
        66 => :SawAmp, 67 => :AmpHash, 68 => :DecHash, 69 => :HexRef, 
        70 => :BustedEntity, 71 => :AmpG, 72 => :AmpGt, 
        73 => :AmpL, 74 => :AmpLt, 75 => :AmpQ, 76 => :AmpQu, 77 => :AmpQuo, 
        78 => :AmpQuot, 79 => :AmpA, 80 => :AmpAp, 81 => :AmpApo, 
        82 => :AmpApos, 83 => :AmpAm, 84 => :AmpAmp, 85 => :EntRefBody, 
        86 => :BustedMarkup, 87 => :TryXMLD, 88 => :TryXMLD2, 
        89 => :TryXMLD3, 90 => :TryXMLD4, 91 => :XMLDs1, 
        92 => :AfterVersion, 93 => :AfterVersEq, 
        94 => :GotVer, 95 => :DoneVer, 96 => :AfterEnc, 
        97 => :AfterEnc2, 98 => :AfterEncEq, 99 => :SQEncName, 
        100 => :DQEncName, 101 => :AfterEncName, 
        102 => :DoneEncName, 103 => :AfterStand, 
        104 => :AfterStand2, 105 => :AfterStandEq, 
        106 => :StandSQ, 107 => :StandDQ, 108 => :AfterSDD, 
        109 => :DoneSDD, 110 => :EndXMLD, 
    }

    def action_1(c)
      result = false
      result ||= a_MarkLt(c)
      result
    end
    def action_2(c)
      result = false
      result ||= a_Push(c, 4)
      result ||= a_ColdStart(c)
      result
    end
    def action_3(c)
      result = false
      result ||= a_HotStart(c)
      result
    end
    def action_4(c)
      result = false
      result ||= a_Push(c, 5)
      result ||= a_ColdStart(c)
      result
    end
    def action_5(c)
      result = false
      result ||= a_Push(c, 60)
      result ||= a_ColdStart(c)
      result
    end
    def action_6(c)
      result = false
      result ||= a_Push(c, 4)
      result
    end
    def action_7(c)
      result = false
      result ||= a_KW(c, "DOCTYPE", 32, 1)
      result
    end
    def action_8(c)
      result = false
      result ||= a_Push(c, 5)
      result
    end
    def action_9(c)
      result = false
      result ||= a_Push(c, 60)
      result
    end
    def action_10(c)
      result = false
      result ||= a_InKW(c)
      result
    end
    def action_11(c)
      result = false
      result ||= a_EndSave(c)
      result
    end
    def action_12(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_ReportPI(c)
      result
    end
    def action_13(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_EndSave(c)
      result ||= a_ReportPI(c)
      result
    end
    def action_14(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_ColdStart(c)
      result
    end
    def action_15(c)
      result = false
      result ||= a_Pop(c)
      result
    end
    def action_16(c)
      result = false
      result ||= a_KW(c, "CDATA", 28, 1)
      result
    end
    def action_17(c)
      result = false
      result ||= a_ColdStart(c)
      result
    end
    def action_18(c)
      result = false
      result ||= a_ReportText(c)
      result
    end
    def action_19(c)
      result = false
      result ||= a_SaveExtra(c, "]")
      result
    end
    def action_20(c)
      result = false
      result ||= a_SaveExtra(c, "]")
      result ||= a_ReportText(c)
      result
    end
    def action_21(c)
      result = false
      result ||= a_ReportText(c)
      result ||= a_ColdStart(c)
      result
    end
    def action_22(c)
      result = false
      result ||= a_SaveExtra(c, "]]")
      result
    end
    def action_23(c)
      result = false
      result ||= a_Push(c, 34)
      result ||= a_HotStart(c)
      result
    end
    def action_24(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_EndGI(c)
      result
    end
    def action_25(c)
      result = false
      result ||= a_Push(c, 48)
      result
    end
    def action_26(c)
      result = false
      result ||= a_SubsetExists(c)
      result
    end
    def action_27(c)
      result = false
      result ||= a_KW(c, "PUBLIC", 36, 2)
      result
    end
    def action_28(c)
      result = false
      result ||= a_Push(c, 40)
      result ||= a_ColdStart(c)
      result
    end
    def action_29(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_EndSave(c)
      result
    end
    def action_30(c)
      result = false
      result ||= a_Push(c, 42)
      result ||= a_ColdStart(c)
      result
    end
    def action_31(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_StuffChar(c)
      result
    end
    def action_32(c)
      result = false
      result ||= a_KW(c, "SYSTEM", 44, 2)
      result
    end
    def action_33(c)
      result = false
      result ||= a_ReportDoctype(c)
      result
    end
    def action_34(c)
      result = false
      result ||= a_SubsetExists(c)
      result
    end
    def action_35(c)
      result = false
      result ||= a_EndGI(c)
      result ||= a_ReportETag(c)
      result
    end
    def action_36(c)
      result = false
      result ||= a_EndGI(c)
      result
    end
    def action_37(c)
      result = false
      result ||= a_ReportETag(c)
      result
    end
    def action_38(c)
      result = false
      result ||= a_EndGI(c)
      result ||= a_ReportSTag(c)
      result
    end
    def action_39(c)
      result = false
      result ||= a_ReportEmpty(c)
      result
    end
    def action_40(c)
      result = false
      result ||= a_ReportSTag(c)
      result
    end
    def action_41(c)
      result = false
      result ||= a_EndAttribute(c)
      result
    end
    def action_42(c)
      result = false
      result ||= a_Push(c, 54)
      result ||= a_ColdStart(c)
      result
    end
    def action_43(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_EndAttrVal(c)
      result
    end
    def action_44(c)
      result = false
      result ||= a_Push(c, 58)
      result
    end
    def action_45(c)
      result = false
      result ||= a_Push(c, 59)
      result
    end
    def action_46(c)
      result = false
      result ||= a_ReportText(c)
      result ||= a_MarkLt(c)
      result
    end
    def action_47(c)
      result = false
      result ||= a_FloatingMSE(c)
      result
    end
    def action_48(c)
      result = false
      result ||= a_Push(c, 63)
      result ||= a_ColdStart(c)
      result
    end
    def action_49(c)
      result = false
      result ||= a_Push(c, 63)
      result
    end
    def action_50(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_HashRef(c)
      result
    end
    def action_51(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_CharRef(c, 62)
      result
    end
    def action_52(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_CharRef(c, 60)
      result
    end
    def action_53(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_CharRef(c, 34)
      result
    end
    def action_54(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_CharRef(c, 39)
      result
    end
    def action_55(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_CharRef(c, 38)
      result
    end
    def action_56(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_EntityReference(c)
      result
    end
    def action_57(c)
      result = false
      result ||= a_KW(c, "version", 92, 1)
      result
    end
    def action_58(c)
      result = false
      result ||= a_KW(c, "'1.0'", 94, 1)
      result
    end
    def action_59(c)
      result = false
      result ||= a_KW(c, "\"1.0\"", 94, 1)
      result
    end
    def action_60(c)
      result = false
      result ||= a_KW(c, "encoding", 96, 1)
      result ||= a_HotStart(c)
      result
    end
    def action_61(c)
      result = false
      result ||= a_KW(c, "standalone", 103, 1)
      result ||= a_HotStart(c)
      result
    end
    def action_62(c)
      result = false
      result ||= a_EndSave(c)
      result ||= a_GotEncoding(c)
      result
    end
    def action_63(c)
      result = false
      result ||= a_KW(c, "standalone", 103, 1)
      result
    end
    def action_64(c)
      result = false
      result ||= a_KW(c, "'yes'", 108, 2)
      result
    end
    def action_65(c)
      result = false
      result ||= a_KW(c, "'no'", 108, 2)
      result
    end
    def action_66(c)
      result = false
      result ||= a_KW(c, "\"yes\"", 108, 2)
      result
    end
    def action_67(c)
      result = false
      result ||= a_KW(c, "\"no\"", 108, 2)
      result
    end
    def action_68(c)
      result = false
      result ||= a_Pop(c)
      result ||= a_GotXMLD(c)
      result
    end

    ACTION_DISPATCHER = [
      nil,
      :action_1,
      :action_2,
      :action_3,
      :action_4,
      :action_5,
      :action_6,
      :action_7,
      :action_8,
      :action_9,
      :action_10,
      :action_11,
      :action_12,
      :action_13,
      :action_14,
      :action_15,
      :action_16,
      :action_17,
      :action_18,
      :action_19,
      :action_20,
      :action_21,
      :action_22,
      :action_23,
      :action_24,
      :action_25,
      :action_26,
      :action_27,
      :action_28,
      :action_29,
      :action_30,
      :action_31,
      :action_32,
      :action_33,
      :action_34,
      :action_35,
      :action_36,
      :action_37,
      :action_38,
      :action_39,
      :action_40,
      :action_41,
      :action_42,
      :action_43,
      :action_44,
      :action_45,
      :action_46,
      :action_47,
      :action_48,
      :action_49,
      :action_50,
      :action_51,
      :action_52,
      :action_53,
      :action_54,
      :action_55,
      :action_56,
      :action_57,
      :action_58,
      :action_59,
      :action_60,
      :action_61,
      :action_62,
      :action_63,
      :action_64,
      :action_65,
      :action_66,
      :action_67,
      :action_68,
    ]
    def do_action(i, c)
      send ACTION_DISPATCHER[i], c
    end

    NAME_CLASS_TRANSITIONS = [
      :xml_char, :xml_char, :namestart_char, :xml_char, 
      :xml_char, :xml_char, :namestart_char, :namestart_char, 
      :namestart_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :namestart_char, :name_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :namestart_char, :name_char, :xml_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :namestart_char, :name_char, :xml_char, 
      :name_char, :xml_char, :namestart_char, :name_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :xml_char, :namestart_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :name_char, 
      :name_char, :name_char, :name_char, :name_char, 
      :name_char, :name_char, :name_char, :name_char, 
      :name_char, :name_char, :name_char, :name_char, 
      :name_char, :name_char, :xml_char, :namestart_char, 
      :name_char, :name_char, :name_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, :xml_char, 
      :xml_char, :xml_char, :xml_char, 
    ]
  end

  class CharClass
    POINTS = {}
    RANGES = {}
    POINTS['NameChar'] = [
        0x002d, 0x002e, 0x005f, 0x00B7, 0x02D0, 0x02D1, 0x0386, 0x0387, 
        0x038C, 0x03DA, 0x03DC, 0x03DE, 0x03E0, 0x0559, 0x05BF, 0x05C4, 
        0x0640, 0x0670, 0x06D5, 0x093C, 0x093D, 0x094D, 0x09B2, 0x09BC, 
        0x09BE, 0x09BF, 0x09D7, 0x0A02, 0x0A3C, 0x0A3E, 0x0A3F, 0x0A5E, 
        0x0A8D, 0x0ABC, 0x0ABD, 0x0AE0, 0x0B3C, 0x0B3D, 0x0B9C, 0x0BD7, 
        0x0CDE, 0x0D57, 0x0E30, 0x0E31, 0x0E46, 0x0E84, 0x0E8A, 0x0E8D, 
        0x0EA5, 0x0EA7, 0x0EB0, 0x0EB1, 0x0EBD, 0x0EC6, 0x0F35, 0x0F37, 
        0x0F39, 0x0F3E, 0x0F3F, 0x0F97, 0x0FB9, 0x1100, 0x1109, 0x113C, 
        0x113E, 0x1140, 0x114C, 0x114E, 0x1150, 0x1159, 0x1163, 0x1165, 
        0x1167, 0x1169, 0x1175, 0x119E, 0x11A8, 0x11AB, 0x11BA, 0x11EB, 
        0x11F0, 0x11F9, 0x1F59, 0x1F5B, 0x1F5D, 0x1FBE, 0x20E1, 0x2126, 
        0x212E, 0x3005, 0x3007, 0x3099, 0x309A, 
      ]
    RANGES['NameChar'] = [
        (0x0030..0x0039), (0x0041..0x005A), (0x0061..0x007A), (0x00C0..0x00D6), 
        (0x00D8..0x00F6), (0x00F8..0x00FF), (0x0100..0x0131), (0x0134..0x013E), 
        (0x0141..0x0148), (0x014A..0x017E), (0x0180..0x01C3), (0x01CD..0x01F0), 
        (0x01F4..0x01F5), (0x01FA..0x0217), (0x0250..0x02A8), (0x02BB..0x02C1), 
        (0x0300..0x0345), (0x0360..0x0361), (0x0388..0x038A), (0x038E..0x03A1), 
        (0x03A3..0x03CE), (0x03D0..0x03D6), (0x03E2..0x03F3), (0x0401..0x040C), 
        (0x040E..0x044F), (0x0451..0x045C), (0x045E..0x0481), (0x0483..0x0486), 
        (0x0490..0x04C4), (0x04C7..0x04C8), (0x04CB..0x04CC), (0x04D0..0x04EB), 
        (0x04EE..0x04F5), (0x04F8..0x04F9), (0x0531..0x0556), (0x0561..0x0586), 
        (0x0591..0x05A1), (0x05A3..0x05B9), (0x05BB..0x05BD), (0x05C1..0x05C2), 
        (0x05D0..0x05EA), (0x05F0..0x05F2), (0x0621..0x063A), (0x0641..0x064A), 
        (0x064B..0x0652), (0x0660..0x0669), (0x0671..0x06B7), (0x06BA..0x06BE), 
        (0x06C0..0x06CE), (0x06D0..0x06D3), (0x06D6..0x06DC), (0x06DD..0x06DF), 
        (0x06E0..0x06E4), (0x06E5..0x06E6), (0x06E7..0x06E8), (0x06EA..0x06ED), 
        (0x06F0..0x06F9), (0x0901..0x0903), (0x0905..0x0939), (0x093E..0x094C), 
        (0x0951..0x0954), (0x0958..0x0961), (0x0962..0x0963), (0x0966..0x096F), 
        (0x0981..0x0983), (0x0985..0x098C), (0x098F..0x0990), (0x0993..0x09A8), 
        (0x09AA..0x09B0), (0x09B6..0x09B9), (0x09C0..0x09C4), (0x09C7..0x09C8), 
        (0x09CB..0x09CD), (0x09DC..0x09DD), (0x09DF..0x09E1), (0x09E2..0x09E3), 
        (0x09E6..0x09EF), (0x09F0..0x09F1), (0x0A05..0x0A0A), (0x0A0F..0x0A10), 
        (0x0A13..0x0A28), (0x0A2A..0x0A30), (0x0A32..0x0A33), (0x0A35..0x0A36), 
        (0x0A38..0x0A39), (0x0A40..0x0A42), (0x0A47..0x0A48), (0x0A4B..0x0A4D), 
        (0x0A59..0x0A5C), (0x0A66..0x0A6F), (0x0A70..0x0A71), (0x0A72..0x0A74), 
        (0x0A81..0x0A83), (0x0A85..0x0A8B), (0x0A8F..0x0A91), (0x0A93..0x0AA8), 
        (0x0AAA..0x0AB0), (0x0AB2..0x0AB3), (0x0AB5..0x0AB9), (0x0ABE..0x0AC5), 
        (0x0AC7..0x0AC9), (0x0ACB..0x0ACD), (0x0AE6..0x0AEF), (0x0B01..0x0B03), 
        (0x0B05..0x0B0C), (0x0B0F..0x0B10), (0x0B13..0x0B28), (0x0B2A..0x0B30), 
        (0x0B32..0x0B33), (0x0B36..0x0B39), (0x0B3E..0x0B43), (0x0B47..0x0B48), 
        (0x0B4B..0x0B4D), (0x0B56..0x0B57), (0x0B5C..0x0B5D), (0x0B5F..0x0B61), 
        (0x0B66..0x0B6F), (0x0B82..0x0B83), (0x0B85..0x0B8A), (0x0B8E..0x0B90), 
        (0x0B92..0x0B95), (0x0B99..0x0B9A), (0x0B9E..0x0B9F), (0x0BA3..0x0BA4), 
        (0x0BA8..0x0BAA), (0x0BAE..0x0BB5), (0x0BB7..0x0BB9), (0x0BBE..0x0BC2), 
        (0x0BC6..0x0BC8), (0x0BCA..0x0BCD), (0x0BE7..0x0BEF), (0x0C01..0x0C03), 
        (0x0C05..0x0C0C), (0x0C0E..0x0C10), (0x0C12..0x0C28), (0x0C2A..0x0C33), 
        (0x0C35..0x0C39), (0x0C3E..0x0C44), (0x0C46..0x0C48), (0x0C4A..0x0C4D), 
        (0x0C55..0x0C56), (0x0C60..0x0C61), (0x0C66..0x0C6F), (0x0C82..0x0C83), 
        (0x0C85..0x0C8C), (0x0C8E..0x0C90), (0x0C92..0x0CA8), (0x0CAA..0x0CB3), 
        (0x0CB5..0x0CB9), (0x0CBE..0x0CC4), (0x0CC6..0x0CC8), (0x0CCA..0x0CCD), 
        (0x0CD5..0x0CD6), (0x0CE0..0x0CE1), (0x0CE6..0x0CEF), (0x0D02..0x0D03), 
        (0x0D05..0x0D0C), (0x0D0E..0x0D10), (0x0D12..0x0D28), (0x0D2A..0x0D39), 
        (0x0D3E..0x0D43), (0x0D46..0x0D48), (0x0D4A..0x0D4D), (0x0D60..0x0D61), 
        (0x0D66..0x0D6F), (0x0E01..0x0E2E), (0x0E32..0x0E33), (0x0E34..0x0E3A), 
        (0x0E40..0x0E45), (0x0E47..0x0E4E), (0x0E50..0x0E59), (0x0E81..0x0E82), 
        (0x0E87..0x0E88), (0x0E94..0x0E97), (0x0E99..0x0E9F), (0x0EA1..0x0EA3), 
        (0x0EAA..0x0EAB), (0x0EAD..0x0EAE), (0x0EB2..0x0EB3), (0x0EB4..0x0EB9), 
        (0x0EBB..0x0EBC), (0x0EC0..0x0EC4), (0x0EC8..0x0ECD), (0x0ED0..0x0ED9), 
        (0x0F18..0x0F19), (0x0F20..0x0F29), (0x0F40..0x0F47), (0x0F49..0x0F69), 
        (0x0F71..0x0F84), (0x0F86..0x0F8B), (0x0F90..0x0F95), (0x0F99..0x0FAD), 
        (0x0FB1..0x0FB7), (0x10A0..0x10C5), (0x10D0..0x10F6), (0x1102..0x1103), 
        (0x1105..0x1107), (0x110B..0x110C), (0x110E..0x1112), (0x1154..0x1155), 
        (0x115F..0x1161), (0x116D..0x116E), (0x1172..0x1173), (0x11AE..0x11AF), 
        (0x11B7..0x11B8), (0x11BC..0x11C2), (0x1E00..0x1E9B), (0x1EA0..0x1EF9), 
        (0x1F00..0x1F15), (0x1F18..0x1F1D), (0x1F20..0x1F45), (0x1F48..0x1F4D), 
        (0x1F50..0x1F57), (0x1F5F..0x1F7D), (0x1F80..0x1FB4), (0x1FB6..0x1FBC), 
        (0x1FC2..0x1FC4), (0x1FC6..0x1FCC), (0x1FD0..0x1FD3), (0x1FD6..0x1FDB), 
        (0x1FE0..0x1FEC), (0x1FF2..0x1FF4), (0x1FF6..0x1FFC), (0x20D0..0x20DC), 
        (0x212A..0x212B), (0x2180..0x2182), (0x3021..0x3029), (0x302A..0x302F), 
        (0x3031..0x3035), (0x3041..0x3094), (0x309D..0x309E), (0x30A1..0x30FA), 
        (0x30FC..0x30FE), (0x3105..0x312C), (0x4E00..0x9FA5), (0xAC00..0xD7A3), 
        
    ]

    POINTS['NameStart'] = [
        0x005f, 0x0386, 0x038C, 0x03DA, 0x03DC, 0x03DE, 0x03E0, 0x0559, 
        0x06D5, 0x093D, 0x09B2, 0x0A5E, 0x0A8D, 0x0ABD, 0x0AE0, 0x0B3D, 
        0x0B9C, 0x0CDE, 0x0E30, 0x0E84, 0x0E8A, 0x0E8D, 0x0EA5, 0x0EA7, 
        0x0EB0, 0x0EBD, 0x1100, 0x1109, 0x113C, 0x113E, 0x1140, 0x114C, 
        0x114E, 0x1150, 0x1159, 0x1163, 0x1165, 0x1167, 0x1169, 0x1175, 
        0x119E, 0x11A8, 0x11AB, 0x11BA, 0x11EB, 0x11F0, 0x11F9, 0x1F59, 
        0x1F5B, 0x1F5D, 0x1FBE, 0x2126, 0x212E, 0x3007, 
      ]
    RANGES['NameStart'] = [
        (0x0041..0x005A), (0x0061..0x007A), (0x00C0..0x00D6), (0x00D8..0x00F6), 
        (0x00F8..0x00FF), (0x0100..0x0131), (0x0134..0x013E), (0x0141..0x0148), 
        (0x014A..0x017E), (0x0180..0x01C3), (0x01CD..0x01F0), (0x01F4..0x01F5), 
        (0x01FA..0x0217), (0x0250..0x02A8), (0x02BB..0x02C1), (0x0388..0x038A), 
        (0x038E..0x03A1), (0x03A3..0x03CE), (0x03D0..0x03D6), (0x03E2..0x03F3), 
        (0x0401..0x040C), (0x040E..0x044F), (0x0451..0x045C), (0x045E..0x0481), 
        (0x0490..0x04C4), (0x04C7..0x04C8), (0x04CB..0x04CC), (0x04D0..0x04EB), 
        (0x04EE..0x04F5), (0x04F8..0x04F9), (0x0531..0x0556), (0x0561..0x0586), 
        (0x05D0..0x05EA), (0x05F0..0x05F2), (0x0621..0x063A), (0x0641..0x064A), 
        (0x0671..0x06B7), (0x06BA..0x06BE), (0x06C0..0x06CE), (0x06D0..0x06D3), 
        (0x06E5..0x06E6), (0x0905..0x0939), (0x0958..0x0961), (0x0985..0x098C), 
        (0x098F..0x0990), (0x0993..0x09A8), (0x09AA..0x09B0), (0x09B6..0x09B9), 
        (0x09DC..0x09DD), (0x09DF..0x09E1), (0x09F0..0x09F1), (0x0A05..0x0A0A), 
        (0x0A0F..0x0A10), (0x0A13..0x0A28), (0x0A2A..0x0A30), (0x0A32..0x0A33), 
        (0x0A35..0x0A36), (0x0A38..0x0A39), (0x0A59..0x0A5C), (0x0A72..0x0A74), 
        (0x0A85..0x0A8B), (0x0A8F..0x0A91), (0x0A93..0x0AA8), (0x0AAA..0x0AB0), 
        (0x0AB2..0x0AB3), (0x0AB5..0x0AB9), (0x0B05..0x0B0C), (0x0B0F..0x0B10), 
        (0x0B13..0x0B28), (0x0B2A..0x0B30), (0x0B32..0x0B33), (0x0B36..0x0B39), 
        (0x0B5C..0x0B5D), (0x0B5F..0x0B61), (0x0B85..0x0B8A), (0x0B8E..0x0B90), 
        (0x0B92..0x0B95), (0x0B99..0x0B9A), (0x0B9E..0x0B9F), (0x0BA3..0x0BA4), 
        (0x0BA8..0x0BAA), (0x0BAE..0x0BB5), (0x0BB7..0x0BB9), (0x0C05..0x0C0C), 
        (0x0C0E..0x0C10), (0x0C12..0x0C28), (0x0C2A..0x0C33), (0x0C35..0x0C39), 
        (0x0C60..0x0C61), (0x0C85..0x0C8C), (0x0C8E..0x0C90), (0x0C92..0x0CA8), 
        (0x0CAA..0x0CB3), (0x0CB5..0x0CB9), (0x0CE0..0x0CE1), (0x0D05..0x0D0C), 
        (0x0D0E..0x0D10), (0x0D12..0x0D28), (0x0D2A..0x0D39), (0x0D60..0x0D61), 
        (0x0E01..0x0E2E), (0x0E32..0x0E33), (0x0E40..0x0E45), (0x0E81..0x0E82), 
        (0x0E87..0x0E88), (0x0E94..0x0E97), (0x0E99..0x0E9F), (0x0EA1..0x0EA3), 
        (0x0EAA..0x0EAB), (0x0EAD..0x0EAE), (0x0EB2..0x0EB3), (0x0EC0..0x0EC4), 
        (0x0F40..0x0F47), (0x0F49..0x0F69), (0x10A0..0x10C5), (0x10D0..0x10F6), 
        (0x1102..0x1103), (0x1105..0x1107), (0x110B..0x110C), (0x110E..0x1112), 
        (0x1154..0x1155), (0x115F..0x1161), (0x116D..0x116E), (0x1172..0x1173), 
        (0x11AE..0x11AF), (0x11B7..0x11B8), (0x11BC..0x11C2), (0x1E00..0x1E9B), 
        (0x1EA0..0x1EF9), (0x1F00..0x1F15), (0x1F18..0x1F1D), (0x1F20..0x1F45), 
        (0x1F48..0x1F4D), (0x1F50..0x1F57), (0x1F5F..0x1F7D), (0x1F80..0x1FB4), 
        (0x1FB6..0x1FBC), (0x1FC2..0x1FC4), (0x1FC6..0x1FCC), (0x1FD0..0x1FD3), 
        (0x1FD6..0x1FDB), (0x1FE0..0x1FEC), (0x1FF2..0x1FF4), (0x1FF6..0x1FFC), 
        (0x212A..0x212B), (0x2180..0x2182), (0x3021..0x3029), (0x3041..0x3094), 
        (0x30A1..0x30FA), (0x3105..0x312C), (0x4E00..0x9FA5), (0xAC00..0xD7A3), 
        
    ]

  end

end
